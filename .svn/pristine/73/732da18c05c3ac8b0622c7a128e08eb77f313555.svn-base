#-*- coding:utf-8 -*-
from aw import *

'''
用例标题:U盘播歌调节音箱音量
预置条件：
1.U盘下存在有效的歌曲
测试步骤：
1.切换音源至U盘，并播放一首歌曲
2.调节音量增加
3.调节音量减小
预期结果：
1.音箱音源显示为U盘
2.媒体音量增加
3.媒体音量减小
'''

class TestScript(unittest.TestCase):
    def setUp(self):
        print('返回主界面')
        Common(SUBDUT1).goBackHome()

    def step1(self):
        print("步骤1.切换音源至U盘，并播放一首歌曲")
        Common(DUT).switchUdiskMode()
        Common().wait(20)
        result = LuCI_Net().getProductPlaySource()
        Logger.info("检测点1：当前音源为U disk")
        self.assertEqual(result, "U disk")

    def step2(self):
        print("步骤2.调节音量增加")
        adjust_volume = 30
        beforeVolume = LuCI_Net().getVolumeValue()
        LuCI_Net().setVolumeValue(Value=beforeVolume+adjust_volume)
        afterVolume = LuCI_Net().getVolumeValue()
        Logger.info("检测点2：音量增加后值变大")
        self.assertGreater(afterVolume, beforeVolume)

    def step3(self):
        print("步骤3.调节音量减小")
        adjust_volume = 20
        beforeVolume = LuCI_Net().getVolumeValue()
        LuCI_Net().setVolumeValue(Value=beforeVolume - adjust_volume)
        afterVolume = LuCI_Net().getVolumeValue()
        Logger.info("检测点3：音量减小后值变小")
        self.assertLessEqual(afterVolume, beforeVolume)

    def test_step(self):
        self.step1()
        self.step2()
        self.step3()

    def tearDown(self):
        print("收尾：设置音箱音量为40%,切换音源为DNLA")
        LuCI_Net().setVolumeValue()
        Common(SUBDUT1).startActivity(activity_name=CONST.PKGNAME.QQMUSIC, timeOut=5)
        Common(SUBDUT1).clickWhenExist(text=CONST.TEXT.MINE)
        Common(SUBDUT1).clickById(id=CONST.ID.QQMUSIC_PLAY_SONG_ICON)  # click local song icon(left-bottom)
        QQMusic(SUBDUT1).switchDlnaMode()
        Common().wait(2)  # wait switch DLNA!
        QQMusic(SUBDUT1).switchPauseStatus() # click pause button
        Common(SUBDUT1).goBackHome()

if __name__ == "__main__":
    unittest.main()
