#-*- coding:utf-8 -*-
from aw import *
from datetime import datetime

'''
用例标题:蓝牙播歌暂停/播放
预置条件：
1.已安装QQ音乐apk
2.QQ音乐本地中存在有效歌曲
3.手机已与蓝牙设备配对
测试步骤：
1.启动QQ音乐应用
2.蓝牙播放歌曲10秒
3.暂停播放歌曲
4.继续播放歌曲
预期结果：
1.能正常启动应用
2.播放歌曲音源为BT
3.歌曲暂停播放
4.歌曲继续播放

'''

class TestScript(unittest.TestCase):
    def setUp(self):
        print('返回主界面')
        Common(SUBDUT1).goBackHome()

    def step1(self):
        print("步骤1.启动QQ音乐应用")
        Common(SUBDUT1).startActivity(activity_name=CONST.PKGNAME.QQMUSIC,timeOut=5)
        result = Checkpoint(SUBDUT1).checkIfExist("检测点1:进入QQ音乐",text=CONST.TEXT.MUSIC_MUSEUM)
        Logger.info("检测点1：能正常启动应用")
        self.assertEqual(result, True)

    def step2(self):
        print("步骤2.蓝牙播放歌曲10秒")
        Common(SUBDUT1).clickById(id=CONST.ID.QQMUSIC_PLAY_SONG_ICON)  # click local song icon(left-bottom)
        QQMusic(SUBDUT1).switchBtMode()
        Common().wait(2)  # wait switch BT!
        QQMusic(SUBDUT1).switchPlayStatus()
        Common().wait(20)  # play song for 20s
        result = LuCI_Net().getProductPlaySource()
        Logger.info("检测点2：当前音源为BT")
        self.assertEqual(result, "BT")

    def step3(self):
        print("步骤3.暂停播放歌曲")
        LuCI_Net().setProductPlaybackControlWithBtLinein(Value=CONST.PLAYBACKCONTROLWITHBTLINEIN.PAUSE)
        Common(SUBDUT1).wait(5)
        result = LuCI_Net().getPlaybackStatusOfPlaySourceWithBT()
        Logger.info("检测点3：歌曲暂停播放")
        self.assertEqual(result, "PAUSE")

    def step4(self):
        print("步骤4.继续播放歌曲")
        LuCI_Net().setProductPlaybackControlWithBtLinein(Value=CONST.PLAYBACKCONTROLWITHBTLINEIN.PLAY)
        Common(SUBDUT1).wait(5)
        result = LuCI_Net().getPlaybackStatusOfPlaySourceWithBT()
        Logger.info("检测点4：歌曲继续播放")
        self.assertEqual(result, "PLAYING")

    def test_step(self):
        self.step1()
        self.step2()
        self.step3()
        self.step4()

    def tearDown(self):
        print("收尾:返回主界面，切换音源为DNLA")
        Common(SUBDUT1).goBackHome()
        Common(SUBDUT1).startActivity(activity_name=CONST.PKGNAME.QQMUSIC, timeOut=5)
        Common(SUBDUT1).clickWhenExist(text=CONST.TEXT.MINE)
        Common(SUBDUT1).clickById(id=CONST.ID.QQMUSIC_PLAY_SONG_ICON)  # click local song icon(left-bottom)
        QQMusic(SUBDUT1).switchDlnaMode()
        Common().wait(2)  # wait switch DLNA!
        QQMusic(SUBDUT1).switchPauseStatus()  # click pause button
        Common(SUBDUT1).goBackHome()

if __name__ == "__main__":
    unittest.main()
