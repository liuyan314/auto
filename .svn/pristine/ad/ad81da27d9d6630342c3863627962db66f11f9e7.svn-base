#-*- coding:utf-8 -*-
from aw import *

'''
用例标题:touch播放/切换喜爱频道功能
预置条件：
1.已安装QQ音乐apk
2.QQ音乐本地中已存在至少一首歌曲
3.mcu串口线发送CLI执行生效
测试步骤：
1.启动QQ音乐应用
2.切换DLNA模式播放歌曲
3.切换频道1中音源
4.切换另外一个非1频道音源
预期结果：
1.能正常启动应用
3.1 speaker成功切换频道
3.2 touch板上的心形灯100%亮
3.3 touch板上的鸟灯100%亮
4.1 speaker成功切换频道
4.2 touch板上的心形灯100%亮
4.3 touch板上的鸟灯100%亮
'''

class TestScript(unittest.TestCase):
    def setUp(self):
        print('返回主界面，清除cli指令')
        Common(SUBDUT1).goBackHome()
        Common(DUT).sendSetCliConmand("clf c")

    def step1(self):
        print("步骤1.启动QQ音乐应用")
        Common(SUBDUT1).startActivity(activity_name=CONST.PKGNAME.QQMUSIC,timeOut=5)
        result = Checkpoint(SUBDUT1).checkIfExist("检测点1:进入QQ音乐",text=CONST.TEXT.MUSIC_MUSEUM)
        Logger.info("检测点1：能正常启动应用")
        self.assertEqual(result, True)

    def step2(self):
        print("步骤2.切换DLNA模式播放歌曲")
        Common(SUBDUT1).clickById(id=CONST.ID.QQMUSIC_PLAY_SONG_ICON)  # click local song icon(left-bottom)
        QQMusic(SUBDUT1).switchDlnaMode()
        Common().wait(5)  #wait switch DLNA!
        QQMusic(SUBDUT1).switchPlayStatus()
        Common().wait(10)  # play song for 10s

    def step3(self):
        print("步骤3.切换频道1中音源")
        Common(DUT).setFavoriteChannel(channel="0")
        Common().wait(2)
        Common(DUT).sendGetCliConmand("d")
        channel = Common(DUT).getCliConmandResult("d","favor_choosed")
        Logger.info("检测点3.1：speaker成功切换频道")
        self.assertEqual(channel, "0")
        Logger.info("检测点3.2：touch板上的心形灯100%亮")
        Common(DUT).sendGetCliConmand("b")
        favoriteLight = Common(DUT).getCliConmandResult("b", "d")
        self.assertEqual(favoriteLight, CONST.TOUCHLEDSTATUS.FAVORITY_LIGHT_FULL)
        Logger.info("检测点3.3：touch板上的鸟灯100%亮")
        playstatus = Common(DUT).getCliConmandResult("b", "mfb")
        self.assertEqual(playstatus, CONST.TOUCHLEDSTATUS.MFB_LIGHT_FULL)

    def step4(self):
        print("步骤4.切换另外一个非1频道音源")
        Common(DUT).setFavoriteChannel(channel="2")
        Common().wait(2)
        Common(DUT).sendGetCliConmand("d")
        channel = Common(DUT).getCliConmandResult("d", "favor_choosed")
        Logger.info("检测点4.1：speaker成功切换频道")
        self.assertEqual(channel, "2")
        Logger.info("检测点4.2：touch板上的心形灯100%亮")
        Common(DUT).sendGetCliConmand("b")
        favoriteLight = Common(DUT).getCliConmandResult("b", "d")
        self.assertEqual(favoriteLight, CONST.TOUCHLEDSTATUS.FAVORITY_LIGHT_FULL)
        Logger.info("检测点4.3：touch板上的鸟灯100%亮")
        playstatus = Common(DUT).getCliConmandResult("b", "mfb")
        self.assertEqual(playstatus, CONST.TOUCHLEDSTATUS.MFB_LIGHT_FULL)

    def test_step(self):
        self.step1()
        self.step2()
        self.step3()
        self.step4()

    def tearDown(self):
        print("收尾:返回主界面")
        Common(DUT).sendSetCliConmand("button ms")
        Common(SUBDUT1).goBackHome()

if __name__ == "__main__":
    unittest.main()
